generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id          String  @id @map("_id")
  displayName String?
  avatarUrl   String?

  createdEvents Event[]              @relation("CreatedEvents")
  participation EventParticipation[]
}

model Event {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  description      String?
  date             DateTime
  endDate          DateTime?
  startTime        String?
  endTime          String?
  location         String
  background       String?
  hideParticipants Boolean   @default(false)
  archived         Boolean   @default(false)
  createdById      String
  createdBy        User      @relation("CreatedEvents", fields: [createdById], references: [id])
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  participation EventParticipation[]

  @@index([createdById])
}

enum ParticipationStatus {
  PENDING
  ACCEPTED
  DECLINED
}

model EventParticipation {
  id        String              @id @default(auto()) @map("_id") @db.ObjectId
  eventId   String              @db.ObjectId
  event     Event               @relation(fields: [eventId], references: [id])
  userId    String
  user      User                @relation(fields: [userId], references: [id])
  status    ParticipationStatus @default(PENDING)
  comment   String?
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt

  @@unique([eventId, userId])
  @@index([eventId])
  @@index([userId])
}

model ActivityLog {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  action    String
  timestamp DateTime @default(now())
  metadata  Json

  @@index([userId])
}
